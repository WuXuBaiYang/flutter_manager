[
  {
    "name": "ACCEPT_HANDOVER",
    "desc": "a calling app to continue a call which was started in another app.",
    "value": "ACCEPT_HANDOVER"
  },
  {
    "name": "ACCESS_BACKGROUND_LOCATION",
    "desc": "an app to access location in the background.",
    "value": "ACCESS_BACKGROUND_LOCATION"
  },
  {
    "name": "ACCESS_BLOBS_ACROSS_USERS",
    "desc": "an application to access data blobs across users.",
    "value": "ACCESS_BLOBS_ACROSS_USERS"
  },
  {
    "name": "ACCESS_CHECKIN_PROPERTIES",
    "desc": "read/write access to the \"properties\" table in the checkin database, to change values that get uploaded.",
    "value": "ACCESS_CHECKIN_PROPERTIES"
  },
  {
    "name": "ACCESS_COARSE_LOCATION",
    "desc": "an app to access approximate location.",
    "value": "ACCESS_COARSE_LOCATION"
  },
  {
    "name": "ACCESS_FINE_LOCATION",
    "desc": "an app to access precise location.",
    "value": "ACCESS_FINE_LOCATION"
  },
  {
    "name": "ACCESS_LOCATION_EXTRA_COMMANDS",
    "desc": "an application to access extra location provider commands.",
    "value": "ACCESS_LOCATION_EXTRA_COMMANDS"
  },
  {
    "name": "ACCESS_MEDIA_LOCATION",
    "desc": "an application to access any geographic locations persisted in the user's shared collection.",
    "value": "ACCESS_MEDIA_LOCATION"
  },
  {
    "name": "ACCESS_NETWORK_STATE",
    "desc": "applications to access information about networks.",
    "value": "ACCESS_NETWORK_STATE"
  },
  {
    "name": "ACCESS_NOTIFICATION_POLICY",
    "desc": "Marker permission for applications that wish to access notification policy.",
    "value": "ACCESS_NOTIFICATION_POLICY"
  },
  {
    "name": "ACCESS_WIFI_STATE",
    "desc": "applications to access information about Wi-Fi networks.",
    "value": "ACCESS_WIFI_STATE"
  },
  {
    "name": "ACCOUNT_MANAGER",
    "desc": "applications to call into AccountAuthenticators.",
    "value": "ACCOUNT_MANAGER"
  },
  {
    "name": "ACTIVITY_RECOGNITION",
    "desc": "an application to recognize physical activity.",
    "value": "ACTIVITY_RECOGNITION"
  },
  {
    "name": "ADD_VOICEMAIL",
    "desc": "an application to add voicemails into the system.",
    "value": "ADD_VOICEMAIL"
  },
  {
    "name": "ANSWER_PHONE_CALLS",
    "desc": "the app to answer an incoming phone call.",
    "value": "ANSWER_PHONE_CALLS"
  },
  {
    "name": "BATTERY_STATS",
    "desc": "an application to collect battery statistics",
    "value": "BATTERY_STATS"
  },
  {
    "name": "BIND_ACCESSIBILITY_SERVICE",
    "desc": "Must be required by an AccessibilityService, to ensure that only the system can bind to it.",
    "value": "BIND_ACCESSIBILITY_SERVICE"
  },
  {
    "name": "BIND_APPWIDGET",
    "desc": "an application to tell the AppWidget service which application can access AppWidget's data.",
    "value": "BIND_APPWIDGET"
  },
  {
    "name": "BIND_AUTOFILL_SERVICE",
    "desc": "Must be required by a AutofillService, to ensure that only the system can bind to it.",
    "value": "BIND_AUTOFILL_SERVICE"
  },
  {
    "name": "BIND_CALL_REDIRECTION_SERVICE",
    "desc": "Must be required by a CallRedirectionService, to ensure that only the system can bind to it.",
    "value": "BIND_CALL_REDIRECTION_SERVICE"
  },
  {
    "name": "BIND_CARRIER_MESSAGING_CLIENT_SERVICE",
    "desc": "A subclass of CarrierMessagingClientService must be protected with this permission.",
    "value": "BIND_CARRIER_MESSAGING_CLIENT_SERVICE"
  },
  {
    "name": "BIND_CARRIER_MESSAGING_SERVICE",
    "desc": "This constant was deprecated in API level 23. Use BIND_CARRIER_SERVICES instead",
    "value": "BIND_CARRIER_MESSAGING_SERVICE"
  },
  {
    "name": "BIND_CARRIER_SERVICES",
    "desc": "The system process that is allowed to bind to services in carrier apps will have this permission.",
    "value": "BIND_CARRIER_SERVICES"
  },
  {
    "name": "BIND_CHOOSER_TARGET_SERVICE",
    "desc": "This constant was deprecated in API level 30. For publishing direct share targets, please follow the instructions in https://developer.android.com/training/sharing/receive.html#providing-direct-share-targets instead.",
    "value": "BIND_CHOOSER_TARGET_SERVICE"
  },
  {
    "name": "BIND_COMPANION_DEVICE_SERVICE",
    "desc": "Must be required by any CompanionDeviceServices to ensure that only the system can bind to it.",
    "value": "BIND_COMPANION_DEVICE_SERVICE"
  },
  {
    "name": "BIND_CONDITION_PROVIDER_SERVICE",
    "desc": "Must be required by a ConditionProviderService, to ensure that only the system can bind to it.",
    "value": "BIND_CONDITION_PROVIDER_SERVICE"
  },
  {
    "name": "BIND_CONTROLS",
    "desc": "SystemUI to request third party controls.",
    "value": "BIND_CONTROLS"
  },
  {
    "name": "BIND_CREDENTIAL_PROVIDER_SERVICE",
    "desc": "Must be required by a CredentialProviderService to ensure that only the system can bind to it.",
    "value": "BIND_CREDENTIAL_PROVIDER_SERVICE"
  },
  {
    "name": "BIND_DEVICE_ADMIN",
    "desc": "Must be required by device administration receiver, to ensure that only the system can interact with it.",
    "value": "BIND_DEVICE_ADMIN"
  },
  {
    "name": "BIND_DREAM_SERVICE",
    "desc": "Must be required by an DreamService, to ensure that only the system can bind to it.",
    "value": "BIND_DREAM_SERVICE"
  },
  {
    "name": "BIND_INCALL_SERVICE",
    "desc": "Must be required by a InCallService, to ensure that only the system can bind to it.",
    "value": "BIND_INCALL_SERVICE"
  },
  {
    "name": "BIND_INPUT_METHOD",
    "desc": "Must be required by an InputMethodService, to ensure that only the system can bind to it.",
    "value": "BIND_INPUT_METHOD"
  },
  {
    "name": "BIND_MIDI_DEVICE_SERVICE",
    "desc": "Must be required by an MidiDeviceService, to ensure that only the system can bind to it.",
    "value": "BIND_MIDI_DEVICE_SERVICE"
  },
  {
    "name": "BIND_NFC_SERVICE",
    "desc": "Must be required by a HostApduService or OffHostApduService to ensure that only the system can bind to it.",
    "value": "BIND_NFC_SERVICE"
  },
  {
    "name": "BIND_NOTIFICATION_LISTENER_SERVICE",
    "desc": "Must be required by an NotificationListenerService, to ensure that only the system can bind to it.",
    "value": "BIND_NOTIFICATION_LISTENER_SERVICE"
  },
  {
    "name": "BIND_PRINT_SERVICE",
    "desc": "Must be required by a PrintService, to ensure that only the system can bind to it.",
    "value": "BIND_PRINT_SERVICE"
  },
  {
    "name": "BIND_QUICK_ACCESS_WALLET_SERVICE",
    "desc": "Must be required by a QuickAccessWalletService to ensure that only the system can bind to it.",
    "value": "BIND_QUICK_ACCESS_WALLET_SERVICE"
  },
  {
    "name": "BIND_QUICK_SETTINGS_TILE",
    "desc": "an application to bind to third party quick settings tiles.",
    "value": "BIND_QUICK_SETTINGS_TILE"
  },
  {
    "name": "BIND_REMOTEVIEWS",
    "desc": "Must be required by a RemoteViewsService, to ensure that only the system can bind to it.",
    "value": "BIND_REMOTEVIEWS"
  },
  {
    "name": "BIND_SCREENING_SERVICE",
    "desc": "Must be required by a CallScreeningService, to ensure that only the system can bind to it.",
    "value": "BIND_SCREENING_SERVICE"
  },
  {
    "name": "BIND_TELECOM_CONNECTION_SERVICE",
    "desc": "Must be required by a ConnectionService, to ensure that only the system can bind to it.",
    "value": "BIND_TELECOM_CONNECTION_SERVICE"
  },
  {
    "name": "BIND_TEXT_SERVICE",
    "desc": "Must be required by a TextService (e.g. SpellCheckerService) to ensure that only the system can bind to it.",
    "value": "BIND_TEXT_SERVICE"
  },
  {
    "name": "BIND_TV_INPUT",
    "desc": "Must be required by a TvInputService to ensure that only the system can bind to it.",
    "value": "BIND_TV_INPUT"
  },
  {
    "name": "BIND_TV_INTERACTIVE_APP",
    "desc": "Must be required by a TvInteractiveAppService to ensure that only the system can bind to it.",
    "value": "BIND_TV_INTERACTIVE_APP"
  },
  {
    "name": "BIND_VISUAL_VOICEMAIL_SERVICE",
    "desc": "Must be required by a link VisualVoicemailService to ensure that only the system can bind to it.",
    "value": "BIND_VISUAL_VOICEMAIL_SERVICE"
  },
  {
    "name": "BIND_VOICE_INTERACTION",
    "desc": "Must be required by a VoiceInteractionService, to ensure that only the system can bind to it.",
    "value": "BIND_VOICE_INTERACTION"
  },
  {
    "name": "BIND_VPN_SERVICE",
    "desc": "Must be required by a VpnService, to ensure that only the system can bind to it.",
    "value": "BIND_VPN_SERVICE"
  },
  {
    "name": "BIND_VR_LISTENER_SERVICE",
    "desc": "Must be required by an VrListenerService, to ensure that only the system can bind to it.",
    "value": "BIND_VR_LISTENER_SERVICE"
  },
  {
    "name": "BIND_WALLPAPER",
    "desc": "Must be required by a WallpaperService, to ensure that only the system can bind to it.",
    "value": "BIND_WALLPAPER"
  },
  {
    "name": "BLUETOOTH",
    "desc": "applications to connect to paired bluetooth devices.",
    "value": "BLUETOOTH"
  },
  {
    "name": "BLUETOOTH_ADMIN",
    "desc": "applications to discover and pair bluetooth devices.",
    "value": "BLUETOOTH_ADMIN"
  },
  {
    "name": "BLUETOOTH_ADVERTISE",
    "desc": "Required to be able to advertise to nearby Bluetooth devices.",
    "value": "BLUETOOTH_ADVERTISE"
  },
  {
    "name": "BLUETOOTH_CONNECT",
    "desc": "Required to be able to connect to paired Bluetooth devices.",
    "value": "BLUETOOTH_CONNECT"
  },
  {
    "name": "BLUETOOTH_PRIVILEGED",
    "desc": "applications to pair bluetooth devices without user interaction, and to allow or disallow phonebook access or message access.",
    "value": "BLUETOOTH_PRIVILEGED"
  },
  {
    "name": "BLUETOOTH_SCAN",
    "desc": "Required to be able to discover and pair nearby Bluetooth devices.",
    "value": "BLUETOOTH_SCAN"
  },
  {
    "name": "BODY_SENSORS",
    "desc": "an application to access data from sensors that the user uses to measure what is happening inside their body, such as heart rate.",
    "value": "BODY_SENSORS"
  },
  {
    "name": "BODY_SENSORS_BACKGROUND",
    "desc": "an application to access data from sensors that the user uses to measure what is happening inside their body, such as heart rate.",
    "value": "BODY_SENSORS_BACKGROUND"
  },
  {
    "name": "BROADCAST_PACKAGE_REMOVED",
    "desc": "an application to broadcast a notification that an application package has been removed.",
    "value": "BROADCAST_PACKAGE_REMOVED"
  },
  {
    "name": "BROADCAST_SMS",
    "desc": "an application to broadcast an SMS receipt notification.",
    "value": "BROADCAST_SMS"
  },
  {
    "name": "BROADCAST_STICKY",
    "desc": "an application to broadcast sticky intents.",
    "value": "BROADCAST_STICKY"
  },
  {
    "name": "BROADCAST_WAP_PUSH",
    "desc": "an application to broadcast a WAP PUSH receipt notification.",
    "value": "BROADCAST_WAP_PUSH"
  },
  {
    "name": "CALL_COMPANION_APP",
    "desc": "an app which implements the InCallService API to be eligible to be enabled as a calling companion app.",
    "value": "CALL_COMPANION_APP"
  },
  {
    "name": "CALL_PHONE",
    "desc": "an application to initiate a phone call without going through the Dialer user interface for the user to confirm the call.",
    "value": "CALL_PHONE"
  },
  {
    "name": "CALL_PRIVILEGED",
    "desc": "an application to call any phone number, including emergency numbers, without going through the Dialer user interface for the user to confirm the call being placed.",
    "value": "CALL_PRIVILEGED"
  },
  {
    "name": "CAMERA",
    "desc": "Required to be able to access the camera device.",
    "value": "CAMERA"
  },
  {
    "name": "CAPTURE_AUDIO_OUTPUT",
    "desc": "an application to capture audio output.",
    "value": "CAPTURE_AUDIO_OUTPUT"
  },
  {
    "name": "CHANGE_COMPONENT_ENABLED_STATE",
    "desc": "an application to change whether an application component (other than its own) is enabled or not.",
    "value": "CHANGE_COMPONENT_ENABLED_STATE"
  },
  {
    "name": "CHANGE_CONFIGURATION",
    "desc": "an application to modify the current configuration, such as locale.",
    "value": "CHANGE_CONFIGURATION"
  },
  {
    "name": "CHANGE_NETWORK_STATE",
    "desc": "applications to change network connectivity state.",
    "value": "CHANGE_NETWORK_STATE"
  },
  {
    "name": "CHANGE_WIFI_MULTICAST_STATE",
    "desc": "applications to enter Wi-Fi Multicast mode.",
    "value": "CHANGE_WIFI_MULTICAST_STATE"
  },
  {
    "name": "CHANGE_WIFI_STATE",
    "desc": "applications to change Wi-Fi connectivity state.",
    "value": "CHANGE_WIFI_STATE"
  },
  {
    "name": "CLEAR_APP_CACHE",
    "desc": "an application to clear the caches of all installed applications on the device.",
    "value": "CLEAR_APP_CACHE"
  },
  {
    "name": "CONFIGURE_WIFI_DISPLAY",
    "desc": "an application to configure and connect to Wifi displays",
    "value": "CONFIGURE_WIFI_DISPLAY"
  },
  {
    "name": "CONTROL_LOCATION_UPDATES",
    "desc": "enabling/disabling location update notifications from the radio.",
    "value": "CONTROL_LOCATION_UPDATES"
  },
  {
    "name": "CREDENTIAL_MANAGER_QUERY_CANDIDATE_CREDENTIALS",
    "desc": "a browser to invoke the set of query apis to get metadata about credential candidates prepared during the CredentialManager.prepareGetCredential API.",
    "value": "CREDENTIAL_MANAGER_QUERY_CANDIDATE_CREDENTIALS"
  },
  {
    "name": "CREDENTIAL_MANAGER_SET_ALLOWED_PROVIDERS",
    "desc": "specifying candidate credential providers to be queried in Credential Manager get flows, or to be preferred as a default in the Credential Manager create flows.",
    "value": "CREDENTIAL_MANAGER_SET_ALLOWED_PROVIDERS"
  },
  {
    "name": "CREDENTIAL_MANAGER_SET_ORIGIN",
    "desc": "a browser to invoke credential manager APIs on behalf of another RP.",
    "value": "CREDENTIAL_MANAGER_SET_ORIGIN"
  },
  {
    "name": "DELETE_CACHE_FILES",
    "desc": "Old permission for deleting an app's cache files, no longer used, but signals for us to quietly ignore calls instead of throwing an exception.",
    "value": "DELETE_CACHE_FILES"
  },
  {
    "name": "DELETE_PACKAGES",
    "desc": "an application to delete packages.",
    "value": "DELETE_PACKAGES"
  },
  {
    "name": "DELIVER_COMPANION_MESSAGES",
    "desc": "an application to deliver companion messages to system",
    "value": "DELIVER_COMPANION_MESSAGES"
  },
  {
    "name": "DETECT_SCREEN_CAPTURE",
    "desc": "an application to get notified when a screen capture of its windows is attempted.",
    "value": "DETECT_SCREEN_CAPTURE"
  },
  {
    "name": "DIAGNOSTIC",
    "desc": "applications to RW to diagnostic resources.",
    "value": "DIAGNOSTIC"
  },
  {
    "name": "DISABLE_KEYGUARD",
    "desc": "applications to disable the keyguard if it is not secure.",
    "value": "DISABLE_KEYGUARD"
  },
  {
    "name": "DUMP",
    "desc": "an application to retrieve state dump information from system services.",
    "value": "DUMP"
  },
  {
    "name": "ENFORCE_UPDATE_OWNERSHIP",
    "desc": "an application to indicate via PackageInstaller.SessionParams.setRequestUpdateOwnership(boolean) that it has the intention of becoming the update owner.",
    "value": "ENFORCE_UPDATE_OWNERSHIP"
  },
  {
    "name": "EXECUTE_APP_ACTION",
    "desc": "an assistive application to perform actions on behalf of users inside of applications.",
    "value": "EXECUTE_APP_ACTION"
  },
  {
    "name": "EXPAND_STATUS_BAR",
    "desc": "an application to expand or collapse the status bar.",
    "value": "EXPAND_STATUS_BAR"
  },
  {
    "name": "FACTORY_TEST",
    "desc": "Run as a manufacturer test application, running as the root user.",
    "value": "FACTORY_TEST"
  },
  {
    "name": "FOREGROUND_SERVICE",
    "desc": "a regular application to use Service.startForeground.",
    "value": "FOREGROUND_SERVICE"
  },
  {
    "name": "FOREGROUND_SERVICE_CAMERA",
    "desc": "a regular application to use Service.startForeground with the type \"camera\".",
    "value": "FOREGROUND_SERVICE_CAMERA"
  },
  {
    "name": "FOREGROUND_SERVICE_CONNECTED_DEVICE",
    "desc": "a regular application to use Service.startForeground with the type \"connectedDevice\".",
    "value": "FOREGROUND_SERVICE_CONNECTED_DEVICE"
  },
  {
    "name": "FOREGROUND_SERVICE_DATA_SYNC",
    "desc": "a regular application to use Service.startForeground with the type \"dataSync\".",
    "value": "FOREGROUND_SERVICE_DATA_SYNC"
  },
  {
    "name": "FOREGROUND_SERVICE_HEALTH",
    "desc": "a regular application to use Service.startForeground with the type \"health\".",
    "value": "FOREGROUND_SERVICE_HEALTH"
  },
  {
    "name": "FOREGROUND_SERVICE_LOCATION",
    "desc": "a regular application to use Service.startForeground with the type \"location\".",
    "value": "FOREGROUND_SERVICE_LOCATION"
  },
  {
    "name": "FOREGROUND_SERVICE_MEDIA_PLAYBACK",
    "desc": "a regular application to use Service.startForeground with the type \"mediaPlayback\".",
    "value": "FOREGROUND_SERVICE_MEDIA_PLAYBACK"
  },
  {
    "name": "FOREGROUND_SERVICE_MEDIA_PROJECTION",
    "desc": "a regular application to use Service.startForeground with the type \"mediaProjection\".",
    "value": "FOREGROUND_SERVICE_MEDIA_PROJECTION"
  },
  {
    "name": "FOREGROUND_SERVICE_MICROPHONE",
    "desc": "a regular application to use Service.startForeground with the type \"microphone\".",
    "value": "FOREGROUND_SERVICE_MICROPHONE"
  },
  {
    "name": "FOREGROUND_SERVICE_PHONE_CALL",
    "desc": "a regular application to use Service.startForeground with the type \"phoneCall\".",
    "value": "FOREGROUND_SERVICE_PHONE_CALL"
  },
  {
    "name": "FOREGROUND_SERVICE_REMOTE_MESSAGING",
    "desc": "a regular application to use Service.startForeground with the type \"remoteMessaging\".",
    "value": "FOREGROUND_SERVICE_REMOTE_MESSAGING"
  },
  {
    "name": "FOREGROUND_SERVICE_SPECIAL_USE",
    "desc": "a regular application to use Service.startForeground with the type \"specialUse\".",
    "value": "FOREGROUND_SERVICE_SPECIAL_USE"
  },
  {
    "name": "FOREGROUND_SERVICE_SYSTEM_EXEMPTED",
    "desc": "a regular application to use Service.startForeground with the type \"systemExempted\".",
    "value": "FOREGROUND_SERVICE_SYSTEM_EXEMPTED"
  },
  {
    "name": "GET_ACCOUNTS",
    "desc": "access to the list of accounts in the Accounts Service.",
    "value": "GET_ACCOUNTS"
  },
  {
    "name": "GET_ACCOUNTS_PRIVILEGED",
    "desc": "access to the list of accounts in the Accounts Service.",
    "value": "GET_ACCOUNTS_PRIVILEGED"
  },
  {
    "name": "GET_PACKAGE_SIZE",
    "desc": "an application to find out the space used by any package.",
    "value": "GET_PACKAGE_SIZE"
  },
  {
    "name": "GET_TASKS",
    "desc": "This constant was deprecated in API level 21. No longer enforced.",
    "value": "GET_TASKS"
  },
  {
    "name": "GLOBAL_SEARCH",
    "desc": "This permission can be used on content providers to allow the global search system to access their data.",
    "value": "GLOBAL_SEARCH"
  },
  {
    "name": "HIDE_OVERLAY_WINDOWS",
    "desc": "an app to prevent non-system-overlay windows from being drawn on top of it",
    "value": "HIDE_OVERLAY_WINDOWS"
  },
  {
    "name": "HIGH_SAMPLING_RATE_SENSORS",
    "desc": "an app to access sensor data with a sampling rate greater than 200 Hz.",
    "value": "HIGH_SAMPLING_RATE_SENSORS"
  },
  {
    "name": "INSTALL_LOCATION_PROVIDER",
    "desc": "an application to install a location provider into the Location Manager.",
    "value": "INSTALL_LOCATION_PROVIDER"
  },
  {
    "name": "INSTALL_PACKAGES",
    "desc": "an application to install packages.",
    "value": "INSTALL_PACKAGES"
  },
  {
    "name": "INSTALL_SHORTCUT",
    "desc": "an application to install a shortcut in Launcher.",
    "value": "INSTALL_SHORTCUT"
  },
  {
    "name": "INSTANT_APP_FOREGROUND_SERVICE",
    "desc": "an instant app to create foreground services.",
    "value": "INSTANT_APP_FOREGROUND_SERVICE"
  },
  {
    "name": "INTERACT_ACROSS_PROFILES",
    "desc": "interaction across profiles in the same profile group.",
    "value": "INTERACT_ACROSS_PROFILES"
  },
  {
    "name": "INTERNET",
    "desc": "applications to open network sockets.",
    "value": "INTERNET"
  },
  {
    "name": "KILL_BACKGROUND_PROCESSES",
    "desc": "an application to call ActivityManager.killBackgroundProcesses(String).",
    "value": "KILL_BACKGROUND_PROCESSES"
  },
  {
    "name": "LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE",
    "desc": "an application to capture screen content to perform a screenshot using the intent action Intent.ACTION_LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE.",
    "value": "LAUNCH_CAPTURE_CONTENT_ACTIVITY_FOR_NOTE"
  },
  {
    "name": "LAUNCH_MULTI_PANE_SETTINGS_DEEP_LINK",
    "desc": "An application needs this permission for Settings.ACTION_SETTINGS_EMBED_DEEP_LINK_ACTIVITY to show its Activity embedded in Settings app.",
    "value": "LAUNCH_MULTI_PANE_SETTINGS_DEEP_LINK"
  },
  {
    "name": "LOADER_USAGE_STATS",
    "desc": "a data loader to read a package's access logs.",
    "value": "LOADER_USAGE_STATS"
  },
  {
    "name": "LOCATION_HARDWARE",
    "desc": "an application to use location features in hardware, such as the geofencing api.",
    "value": "LOCATION_HARDWARE"
  },
  {
    "name": "MANAGE_DEVICE_LOCK_STATE",
    "desc": "financed device kiosk apps to perform actions on the Device Lock service",
    "value": "MANAGE_DEVICE_LOCK_STATE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_ACCESSIBILITY",
    "desc": "an application to manage policy related to accessibility.",
    "value": "MANAGE_DEVICE_POLICY_ACCESSIBILITY"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_ACCOUNT_MANAGEMENT",
    "desc": "an application to set policy related to account management.",
    "value": "MANAGE_DEVICE_POLICY_ACCOUNT_MANAGEMENT"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_ACROSS_USERS",
    "desc": "an application to set device policies outside the current user that are required for securing device ownership without accessing user data.",
    "value": "MANAGE_DEVICE_POLICY_ACROSS_USERS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL",
    "desc": "an application to set device policies outside the current user.",
    "value": "MANAGE_DEVICE_POLICY_ACROSS_USERS_FULL"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_ACROSS_USERS_SECURITY_CRITICAL",
    "desc": "an application to set device policies outside the current user that are critical for securing data within the current user.",
    "value": "MANAGE_DEVICE_POLICY_ACROSS_USERS_SECURITY_CRITICAL"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_AIRPLANE_MODE",
    "desc": "an application to set policy related to airplane mode.",
    "value": "MANAGE_DEVICE_POLICY_AIRPLANE_MODE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_APPS_CONTROL",
    "desc": "an application to manage policy regarding modifying applications.",
    "value": "MANAGE_DEVICE_POLICY_APPS_CONTROL"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_APP_RESTRICTIONS",
    "desc": "an application to manage application restrictions.",
    "value": "MANAGE_DEVICE_POLICY_APP_RESTRICTIONS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_APP_USER_DATA",
    "desc": "an application to manage policy related to application user data.",
    "value": "MANAGE_DEVICE_POLICY_APP_USER_DATA"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_AUDIO_OUTPUT",
    "desc": "an application to set policy related to audio output.",
    "value": "MANAGE_DEVICE_POLICY_AUDIO_OUTPUT"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_AUTOFILL",
    "desc": "an application to set policy related to autofill.",
    "value": "MANAGE_DEVICE_POLICY_AUTOFILL"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_BACKUP_SERVICE",
    "desc": "an application to manage backup service policy.",
    "value": "MANAGE_DEVICE_POLICY_BACKUP_SERVICE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_BLUETOOTH",
    "desc": "an application to set policy related to bluetooth.",
    "value": "MANAGE_DEVICE_POLICY_BLUETOOTH"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_BUGREPORT",
    "desc": "an application to request bugreports with user consent.",
    "value": "MANAGE_DEVICE_POLICY_BUGREPORT"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_CALLS",
    "desc": "an application to manage calling policy.",
    "value": "MANAGE_DEVICE_POLICY_CALLS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_CAMERA",
    "desc": "an application to set policy related to restricting a user's ability to use or enable and disable the camera.",
    "value": "MANAGE_DEVICE_POLICY_CAMERA"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_CERTIFICATES",
    "desc": "an application to set policy related to certificates.",
    "value": "MANAGE_DEVICE_POLICY_CERTIFICATES"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_COMMON_CRITERIA_MODE",
    "desc": "an application to manage policy related to common criteria mode.",
    "value": "MANAGE_DEVICE_POLICY_COMMON_CRITERIA_MODE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_DEBUGGING_FEATURES",
    "desc": "an application to manage debugging features policy.",
    "value": "MANAGE_DEVICE_POLICY_DEBUGGING_FEATURES"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_DEFAULT_SMS",
    "desc": "an application to set policy related to the default sms application.",
    "value": "MANAGE_DEVICE_POLICY_DEFAULT_SMS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_DEVICE_IDENTIFIERS",
    "desc": "an application to manage policy related to device identifiers.",
    "value": "MANAGE_DEVICE_POLICY_DEVICE_IDENTIFIERS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_DISPLAY",
    "desc": "an application to set policy related to the display.",
    "value": "MANAGE_DEVICE_POLICY_DISPLAY"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_FACTORY_RESET",
    "desc": "an application to set policy related to factory reset.",
    "value": "MANAGE_DEVICE_POLICY_FACTORY_RESET"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_FUN",
    "desc": "an application to set policy related to fun.",
    "value": "MANAGE_DEVICE_POLICY_FUN"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_INPUT_METHODS",
    "desc": "an application to set policy related to input methods.",
    "value": "MANAGE_DEVICE_POLICY_INPUT_METHODS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_INSTALL_UNKNOWN_SOURCES",
    "desc": "an application to manage installing from unknown sources policy.",
    "value": "MANAGE_DEVICE_POLICY_INSTALL_UNKNOWN_SOURCES"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_KEEP_UNINSTALLED_PACKAGES",
    "desc": "an application to set policy related to keeping uninstalled packages.",
    "value": "MANAGE_DEVICE_POLICY_KEEP_UNINSTALLED_PACKAGES"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_KEYGUARD",
    "desc": "an application to manage policy related to keyguard.",
    "value": "MANAGE_DEVICE_POLICY_KEYGUARD"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_LOCALE",
    "desc": "an application to set policy related to locale.",
    "value": "MANAGE_DEVICE_POLICY_LOCALE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_LOCATION",
    "desc": "an application to set policy related to location.",
    "value": "MANAGE_DEVICE_POLICY_LOCATION"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_LOCK",
    "desc": "an application to lock a profile or the device with the appropriate cross-user permission.",
    "value": "MANAGE_DEVICE_POLICY_LOCK"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS",
    "desc": "an application to set policy related to lock credentials.",
    "value": "MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_LOCK_TASK",
    "desc": "an application to manage lock task policy.",
    "value": "MANAGE_DEVICE_POLICY_LOCK_TASK"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_METERED_DATA",
    "desc": "an application to manage policy related to metered data.",
    "value": "MANAGE_DEVICE_POLICY_METERED_DATA"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_MICROPHONE",
    "desc": "an application to set policy related to restricting a user's ability to use or enable and disable the microphone.",
    "value": "MANAGE_DEVICE_POLICY_MICROPHONE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_MOBILE_NETWORK",
    "desc": "an application to set policy related to mobile networks.",
    "value": "MANAGE_DEVICE_POLICY_MOBILE_NETWORK"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_MODIFY_USERS",
    "desc": "an application to manage policy preventing users from modifying users.",
    "value": "MANAGE_DEVICE_POLICY_MODIFY_USERS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_MTE",
    "desc": "an application to manage policy related to the Memory Tagging Extension (MTE).",
    "value": "MANAGE_DEVICE_POLICY_MTE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_NEARBY_COMMUNICATION",
    "desc": "an application to set policy related to nearby communications (e.g. Beam and nearby streaming).",
    "value": "MANAGE_DEVICE_POLICY_NEARBY_COMMUNICATION"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_NETWORK_LOGGING",
    "desc": "an application to set policy related to network logging.",
    "value": "MANAGE_DEVICE_POLICY_NETWORK_LOGGING"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY",
    "desc": "an application to manage the identity of the managing organization.",
    "value": "MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_OVERRIDE_APN",
    "desc": "an application to set policy related to override APNs.",
    "value": "MANAGE_DEVICE_POLICY_OVERRIDE_APN"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_PACKAGE_STATE",
    "desc": "an application to set policy related to hiding and suspending packages.",
    "value": "MANAGE_DEVICE_POLICY_PACKAGE_STATE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_PHYSICAL_MEDIA",
    "desc": "an application to set policy related to physical media.",
    "value": "MANAGE_DEVICE_POLICY_PHYSICAL_MEDIA"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_PRINTING",
    "desc": "an application to set policy related to printing.",
    "value": "MANAGE_DEVICE_POLICY_PRINTING"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_PRIVATE_DNS",
    "desc": "an application to set policy related to private DNS.",
    "value": "MANAGE_DEVICE_POLICY_PRIVATE_DNS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_PROFILES",
    "desc": "an application to set policy related to profiles.",
    "value": "MANAGE_DEVICE_POLICY_PROFILES"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_PROFILE_INTERACTION",
    "desc": "an application to set policy related to interacting with profiles (e.g. Disallowing cross-profile copy and paste).",
    "value": "MANAGE_DEVICE_POLICY_PROFILE_INTERACTION"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_PROXY",
    "desc": "an application to set a network-independent global HTTP proxy.",
    "value": "MANAGE_DEVICE_POLICY_PROXY"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_QUERY_SYSTEM_UPDATES",
    "desc": "an application query system updates.",
    "value": "MANAGE_DEVICE_POLICY_QUERY_SYSTEM_UPDATES"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_RESET_PASSWORD",
    "desc": "an application to force set a new device unlock password or a managed profile challenge on current user.",
    "value": "MANAGE_DEVICE_POLICY_RESET_PASSWORD"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_RESTRICT_PRIVATE_DNS",
    "desc": "an application to set policy related to restricting the user from configuring private DNS.",
    "value": "MANAGE_DEVICE_POLICY_RESTRICT_PRIVATE_DNS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_RUNTIME_PERMISSIONS",
    "desc": "an application to set the grant state of runtime permissions on packages.",
    "value": "MANAGE_DEVICE_POLICY_RUNTIME_PERMISSIONS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_RUN_IN_BACKGROUND",
    "desc": "an application to set policy related to users running in the background.",
    "value": "MANAGE_DEVICE_POLICY_RUN_IN_BACKGROUND"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SAFE_BOOT",
    "desc": "an application to manage safe boot policy.",
    "value": "MANAGE_DEVICE_POLICY_SAFE_BOOT"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SCREEN_CAPTURE",
    "desc": "an application to set policy related to screen capture.",
    "value": "MANAGE_DEVICE_POLICY_SCREEN_CAPTURE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SCREEN_CONTENT",
    "desc": "an application to set policy related to the usage of the contents of the screen.",
    "value": "MANAGE_DEVICE_POLICY_SCREEN_CONTENT"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SECURITY_LOGGING",
    "desc": "an application to set policy related to security logging.",
    "value": "MANAGE_DEVICE_POLICY_SECURITY_LOGGING"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SETTINGS",
    "desc": "an application to set policy related to settings.",
    "value": "MANAGE_DEVICE_POLICY_SETTINGS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SMS",
    "desc": "an application to set policy related to sms.",
    "value": "MANAGE_DEVICE_POLICY_SMS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_STATUS_BAR",
    "desc": "an application to set policy related to the status bar.",
    "value": "MANAGE_DEVICE_POLICY_STATUS_BAR"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE",
    "desc": "an application to set support messages for when a user action is affected by an active policy.",
    "value": "MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SUSPEND_PERSONAL_APPS",
    "desc": "an application to set policy related to suspending personal apps.",
    "value": "MANAGE_DEVICE_POLICY_SUSPEND_PERSONAL_APPS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SYSTEM_APPS",
    "desc": "an application to manage policy related to system apps.",
    "value": "MANAGE_DEVICE_POLICY_SYSTEM_APPS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SYSTEM_DIALOGS",
    "desc": "an application to set policy related to system dialogs.",
    "value": "MANAGE_DEVICE_POLICY_SYSTEM_DIALOGS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_SYSTEM_UPDATES",
    "desc": "an application to set policy related to system updates.",
    "value": "MANAGE_DEVICE_POLICY_SYSTEM_UPDATES"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_TIME",
    "desc": "an application to manage device policy relating to time.",
    "value": "MANAGE_DEVICE_POLICY_TIME"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_USB_DATA_SIGNALLING",
    "desc": "an application to set policy related to usb data signalling.",
    "value": "MANAGE_DEVICE_POLICY_USB_DATA_SIGNALLING"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_USB_FILE_TRANSFER",
    "desc": "an application to set policy related to usb file transfers.",
    "value": "MANAGE_DEVICE_POLICY_USB_FILE_TRANSFER"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_USERS",
    "desc": "an application to set policy related to users.",
    "value": "MANAGE_DEVICE_POLICY_USERS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_VPN",
    "desc": "an application to set policy related to VPNs.",
    "value": "MANAGE_DEVICE_POLICY_VPN"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_WALLPAPER",
    "desc": "an application to set policy related to the wallpaper.",
    "value": "MANAGE_DEVICE_POLICY_WALLPAPER"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_WIFI",
    "desc": "an application to set policy related to Wifi.",
    "value": "MANAGE_DEVICE_POLICY_WIFI"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_WINDOWS",
    "desc": "an application to set policy related to windows.",
    "value": "MANAGE_DEVICE_POLICY_WINDOWS"
  },
  {
    "name": "MANAGE_DEVICE_POLICY_WIPE_DATA",
    "desc": "an application to manage policy related to wiping data.",
    "value": "MANAGE_DEVICE_POLICY_WIPE_DATA"
  },
  {
    "name": "MANAGE_DOCUMENTS",
    "desc": "an application to manage access to documents, usually as part of a document picker.",
    "value": "MANAGE_DOCUMENTS"
  },
  {
    "name": "MANAGE_EXTERNAL_STORAGE",
    "desc": "an application a broad access to external storage in scoped storage.",
    "value": "MANAGE_EXTERNAL_STORAGE"
  },
  {
    "name": "MANAGE_MEDIA",
    "desc": "an application to modify and delete media files on this device or any connected storage device without user confirmation.",
    "value": "MANAGE_MEDIA"
  },
  {
    "name": "MANAGE_ONGOING_CALLS",
    "desc": "to query ongoing call details and manage ongoing calls",
    "value": "MANAGE_ONGOING_CALLS"
  },
  {
    "name": "MANAGE_OWN_CALLS",
    "desc": "a calling application which manages its own calls through the self-managed ConnectionService APIs.",
    "value": "MANAGE_OWN_CALLS"
  },
  {
    "name": "MANAGE_WIFI_INTERFACES",
    "desc": "applications to get notified when a Wi-Fi interface request cannot be satisfied without tearing down one or more other interfaces, and provide a decision whether to approve the request or reject it.",
    "value": "MANAGE_WIFI_INTERFACES"
  },
  {
    "name": "MANAGE_WIFI_NETWORK_SELECTION",
    "desc": "This permission is used to let OEMs grant their trusted app access to a subset of privileged wifi APIs to improve wifi performance.",
    "value": "MANAGE_WIFI_NETWORK_SELECTION"
  },
  {
    "name": "MASTER_CLEAR",
    "desc": "Not for use by third-party applications.",
    "value": "MASTER_CLEAR"
  },
  {
    "name": "MEDIA_CONTENT_CONTROL",
    "desc": "an application to know what content is playing and control its playback.",
    "value": "MEDIA_CONTENT_CONTROL"
  },
  {
    "name": "MODIFY_AUDIO_SETTINGS",
    "desc": "an application to modify global audio settings.",
    "value": "MODIFY_AUDIO_SETTINGS"
  },
  {
    "name": "MODIFY_PHONE_STATE",
    "desc": "modification of the telephony state - power on, mmi, etc.",
    "value": "MODIFY_PHONE_STATE"
  },
  {
    "name": "MOUNT_FORMAT_FILESYSTEMS",
    "desc": "formatting file systems for removable storage.",
    "value": "MOUNT_FORMAT_FILESYSTEMS"
  },
  {
    "name": "MOUNT_UNMOUNT_FILESYSTEMS",
    "desc": "mounting and unmounting file systems for removable storage.",
    "value": "MOUNT_UNMOUNT_FILESYSTEMS"
  },
  {
    "name": "NEARBY_WIFI_DEVICES",
    "desc": "Required to be able to advertise and connect to nearby devices via Wi-Fi.",
    "value": "NEARBY_WIFI_DEVICES"
  },
  {
    "name": "NFC",
    "desc": "applications to perform I/O operations over NFC.",
    "value": "NFC"
  },
  {
    "name": "NFC_PREFERRED_PAYMENT_INFO",
    "desc": "applications to receive NFC preferred payment service information.",
    "value": "NFC_PREFERRED_PAYMENT_INFO"
  },
  {
    "name": "NFC_TRANSACTION_EVENT",
    "desc": "applications to receive NFC transaction events.",
    "value": "NFC_TRANSACTION_EVENT"
  },
  {
    "name": "OVERRIDE_WIFI_CONFIG",
    "desc": "an application to modify any wifi configuration, even if created by another application.",
    "value": "OVERRIDE_WIFI_CONFIG"
  },
  {
    "name": "PACKAGE_USAGE_STATS",
    "desc": "an application to collect component usage statistics",
    "value": "PACKAGE_USAGE_STATS"
  },
  {
    "desc": "Declaring the permission implies intention to use the API and the user of the device can grant permission through the Settings application.",
    "value": null
  },
  {
    "name": "PERSISTENT_ACTIVITY",
    "desc": "This constant was deprecated in API level 15. This functionality will be removed in the future; please do not use. Allow an application to make its activities persistent.",
    "value": "PERSISTENT_ACTIVITY"
  },
  {
    "name": "POST_NOTIFICATIONS",
    "desc": "an app to post notifications",
    "value": "POST_NOTIFICATIONS"
  },
  {
    "name": "PROCESS_OUTGOING_CALLS",
    "desc": "This constant was deprecated in API level 29. Applications should use CallRedirectionService instead of the Intent.ACTION_NEW_OUTGOING_CALL broadcast.",
    "value": "PROCESS_OUTGOING_CALLS"
  },
  {
    "name": "PROVIDE_OWN_AUTOFILL_SUGGESTIONS",
    "desc": "an application to display its suggestions using the autofill framework.",
    "value": "PROVIDE_OWN_AUTOFILL_SUGGESTIONS"
  },
  {
    "name": "PROVIDE_REMOTE_CREDENTIALS",
    "desc": "an application to be able to store and retrieve credentials from a remote device.",
    "value": "PROVIDE_REMOTE_CREDENTIALS"
  },
  {
    "name": "QUERY_ALL_PACKAGES",
    "desc": "query of any normal app on the device, regardless of manifest declarations.",
    "value": "QUERY_ALL_PACKAGES"
  },
  {
    "name": "READ_ASSISTANT_APP_SEARCH_DATA",
    "desc": "an application to query over global data in AppSearch that's visible to the ASSISTANT role.",
    "value": "READ_ASSISTANT_APP_SEARCH_DATA"
  },
  {
    "name": "READ_BASIC_PHONE_STATE",
    "desc": "read only access to phone state with a non dangerous permission, including the information like cellular network type, software version.",
    "value": "READ_BASIC_PHONE_STATE"
  },
  {
    "name": "READ_CALENDAR",
    "desc": "an application to read the user's calendar data.",
    "value": "READ_CALENDAR"
  },
  {
    "name": "READ_CALL_LOG",
    "desc": "an application to read the user's call log.",
    "value": "READ_CALL_LOG"
  },
  {
    "name": "READ_CONTACTS",
    "desc": "an application to read the user's contacts data.",
    "value": "READ_CONTACTS"
  },
  {
    "name": "READ_EXTERNAL_STORAGE",
    "desc": "an application to read from external storage.",
    "value": "READ_EXTERNAL_STORAGE"
  },
  {
    "name": "READ_HOME_APP_SEARCH_DATA",
    "desc": "an application to query over global data in AppSearch that's visible to the HOME role.",
    "value": "READ_HOME_APP_SEARCH_DATA"
  },
  {
    "name": "READ_INPUT_STATE",
    "desc": "This constant was deprecated in API level 16. The API that used this permission has been removed.",
    "value": "READ_INPUT_STATE"
  },
  {
    "name": "READ_LOGS",
    "desc": "an application to read the low-level system log files.",
    "value": "READ_LOGS"
  },
  {
    "name": "READ_MEDIA_AUDIO",
    "desc": "an application to read audio files from external storage.",
    "value": "READ_MEDIA_AUDIO"
  },
  {
    "name": "READ_MEDIA_IMAGES",
    "desc": "an application to read image files from external storage.",
    "value": "READ_MEDIA_IMAGES"
  },
  {
    "name": "READ_MEDIA_VIDEO",
    "desc": "an application to read video files from external storage.",
    "value": "READ_MEDIA_VIDEO"
  },
  {
    "name": "READ_MEDIA_VISUAL_USER_SELECTED",
    "desc": "an application to read image or video files from external storage that a user has selected via the permission prompt photo picker.",
    "value": "READ_MEDIA_VISUAL_USER_SELECTED"
  },
  {
    "name": "READ_NEARBY_STREAMING_POLICY",
    "desc": "an application to read nearby streaming policy.",
    "value": "READ_NEARBY_STREAMING_POLICY"
  },
  {
    "name": "READ_PHONE_NUMBERS",
    "desc": "read access to the device's phone number(s).",
    "value": "READ_PHONE_NUMBERS"
  },
  {
    "name": "READ_PHONE_STATE",
    "desc": "read only access to phone state, including the current cellular network information, the status of any ongoing calls, and a list of any PhoneAccounts registered on the device.",
    "value": "READ_PHONE_STATE"
  },
  {
    "name": "READ_PRECISE_PHONE_STATE",
    "desc": "read only access to precise phone state.",
    "value": "READ_PRECISE_PHONE_STATE"
  },
  {
    "name": "READ_SMS",
    "desc": "an application to read SMS messages.",
    "value": "READ_SMS"
  },
  {
    "name": "READ_SYNC_SETTINGS",
    "desc": "applications to read the sync settings.",
    "value": "READ_SYNC_SETTINGS"
  },
  {
    "name": "READ_SYNC_STATS",
    "desc": "applications to read the sync stats.",
    "value": "READ_SYNC_STATS"
  },
  {
    "name": "READ_VOICEMAIL",
    "desc": "an application to read voicemails in the system.",
    "value": "READ_VOICEMAIL"
  },
  {
    "name": "REBOOT",
    "desc": "Required to be able to reboot the device.",
    "value": "REBOOT"
  },
  {
    "name": "RECEIVE_BOOT_COMPLETED",
    "desc": "an application to receive the Intent.ACTION_BOOT_COMPLETED that is broadcast after the system finishes booting.",
    "value": "RECEIVE_BOOT_COMPLETED"
  },
  {
    "name": "RECEIVE_MMS",
    "desc": "an application to monitor incoming MMS messages.",
    "value": "RECEIVE_MMS"
  },
  {
    "name": "RECEIVE_SMS",
    "desc": "an application to receive SMS messages.",
    "value": "RECEIVE_SMS"
  },
  {
    "name": "RECEIVE_WAP_PUSH",
    "desc": "an application to receive WAP push messages.",
    "value": "RECEIVE_WAP_PUSH"
  },
  {
    "name": "RECORD_AUDIO",
    "desc": "an application to record audio.",
    "value": "RECORD_AUDIO"
  },
  {
    "name": "REORDER_TASKS",
    "desc": "an application to change the Z-order of tasks.",
    "value": "REORDER_TASKS"
  },
  {
    "name": "REQUEST_COMPANION_PROFILE_APP_STREAMING",
    "desc": "application to request to be associated with a virtual display capable of streaming Android applications (AssociationRequest.DEVICE_PROFILE_APP_STREAMING) by CompanionDeviceManager.",
    "value": "REQUEST_COMPANION_PROFILE_APP_STREAMING"
  },
  {
    "name": "REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION",
    "desc": "application to request to be associated with a vehicle head unit capable of automotive projection (AssociationRequest.DEVICE_PROFILE_AUTOMOTIVE_PROJECTION) by CompanionDeviceManager.",
    "value": "REQUEST_COMPANION_PROFILE_AUTOMOTIVE_PROJECTION"
  },
  {
    "name": "REQUEST_COMPANION_PROFILE_COMPUTER",
    "desc": "application to request to be associated with a computer to share functionality and/or data with other devices, such as notifications, photos and media (AssociationRequest.DEVICE_PROFILE_COMPUTER) by CompanionDeviceManager.",
    "value": "REQUEST_COMPANION_PROFILE_COMPUTER"
  },
  {
    "name": "REQUEST_COMPANION_PROFILE_GLASSES",
    "desc": "app to request to be associated with a device via CompanionDeviceManager as \"glasses\"",
    "value": "REQUEST_COMPANION_PROFILE_GLASSES"
  },
  {
    "name": "REQUEST_COMPANION_PROFILE_NEARBY_DEVICE_STREAMING",
    "desc": "application to request to stream content from an Android host to a nearby device (AssociationRequest.DEVICE_PROFILE_NEARBY_DEVICE_STREAMING) by CompanionDeviceManager.",
    "value": "REQUEST_COMPANION_PROFILE_NEARBY_DEVICE_STREAMING"
  },
  {
    "name": "REQUEST_COMPANION_PROFILE_WATCH",
    "desc": "app to request to be associated with a device via CompanionDeviceManager as a \"watch\"",
    "value": "REQUEST_COMPANION_PROFILE_WATCH"
  },
  {
    "name": "REQUEST_COMPANION_RUN_IN_BACKGROUND",
    "desc": "a companion app to run in the background.",
    "value": "REQUEST_COMPANION_RUN_IN_BACKGROUND"
  },
  {
    "name": "REQUEST_COMPANION_SELF_MANAGED",
    "desc": "an application to create a \"self-managed\" association.",
    "value": "REQUEST_COMPANION_SELF_MANAGED"
  },
  {
    "name": "REQUEST_COMPANION_START_FOREGROUND_SERVICES_FROM_BACKGROUND",
    "desc": "a companion app to start a foreground service from the background.",
    "value": "REQUEST_COMPANION_START_FOREGROUND_SERVICES_FROM_BACKGROUND"
  },
  {
    "name": "REQUEST_COMPANION_USE_DATA_IN_BACKGROUND",
    "desc": "a companion app to use data in the background.",
    "value": "REQUEST_COMPANION_USE_DATA_IN_BACKGROUND"
  },
  {
    "name": "REQUEST_DELETE_PACKAGES",
    "desc": "an application to request deleting packages.",
    "value": "REQUEST_DELETE_PACKAGES"
  },
  {
    "name": "REQUEST_IGNORE_BATTERY_OPTIMIZATIONS",
    "desc": "Permission an application must hold in order to use Settings.ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS.",
    "value": "REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"
  },
  {
    "name": "REQUEST_INSTALL_PACKAGES",
    "desc": "an application to request installing packages.",
    "value": "REQUEST_INSTALL_PACKAGES"
  },
  {
    "name": "REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE",
    "desc": "an application to subscribe to notifications about the presence status change of their associated companion device",
    "value": "REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE"
  },
  {
    "name": "REQUEST_PASSWORD_COMPLEXITY",
    "desc": "an application to request the screen lock complexity and prompt users to update the screen lock to a certain complexity level.",
    "value": "REQUEST_PASSWORD_COMPLEXITY"
  },
  {
    "name": "RESTART_PACKAGES",
    "desc": "This constant was deprecated in API level 15. The ActivityManager.restartPackage(String) API is no longer supported.",
    "value": "RESTART_PACKAGES"
  },
  {
    "name": "RUN_USER_INITIATED_JOBS",
    "desc": "applications to use the user-initiated jobs API.",
    "value": "RUN_USER_INITIATED_JOBS"
  },
  {
    "name": "SCHEDULE_EXACT_ALARM",
    "desc": "applications to use exact alarm APIs.",
    "value": "SCHEDULE_EXACT_ALARM"
  },
  {
    "name": "SEND_RESPOND_VIA_MESSAGE",
    "desc": "an application (Phone) to send a request to other applications to handle the respond-via-message action during incoming calls.",
    "value": "SEND_RESPOND_VIA_MESSAGE"
  },
  {
    "name": "SEND_SMS",
    "desc": "an application to send SMS messages.",
    "value": "SEND_SMS"
  },
  {
    "name": "SET_ALARM",
    "desc": "an application to broadcast an Intent to set an alarm for the user.",
    "value": "SET_ALARM"
  },
  {
    "name": "SET_ALWAYS_FINISH",
    "desc": "an application to control whether activities are immediately finished when put in the background.",
    "value": "SET_ALWAYS_FINISH"
  },
  {
    "name": "SET_ANIMATION_SCALE",
    "desc": "Modify the global animation scaling factor.",
    "value": "SET_ANIMATION_SCALE"
  },
  {
    "name": "SET_DEBUG_APP",
    "desc": "Configure an application for debugging.",
    "value": "SET_DEBUG_APP"
  },
  {
    "name": "SET_PREFERRED_APPLICATIONS",
    "desc": "This constant was deprecated in API level 15. No longer useful, see PackageManager.addPackageToPreferred(String) for details.",
    "value": "SET_PREFERRED_APPLICATIONS"
  },
  {
    "name": "SET_PROCESS_LIMIT",
    "desc": "an application to set the maximum number of (not needed) application processes that can be running.",
    "value": "SET_PROCESS_LIMIT"
  },
  {
    "name": "SET_TIME",
    "desc": "applications to set the system time directly.",
    "value": "SET_TIME"
  },
  {
    "name": "SET_TIME_ZONE",
    "desc": "applications to set the system time zone directly.",
    "value": "SET_TIME_ZONE"
  },
  {
    "name": "SET_WALLPAPER",
    "desc": "applications to set the wallpaper.",
    "value": "SET_WALLPAPER"
  },
  {
    "name": "SET_WALLPAPER_HINTS",
    "desc": "applications to set the wallpaper hints.",
    "value": "SET_WALLPAPER_HINTS"
  },
  {
    "name": "SIGNAL_PERSISTENT_PROCESSES",
    "desc": "Allow an application to request that a signal be sent to all persistent processes.",
    "value": "SIGNAL_PERSISTENT_PROCESSES"
  },
  {
    "name": "SMS_FINANCIAL_TRANSACTIONS",
    "desc": "This constant was deprecated in API level 31. The API that used this permission is no longer functional.",
    "value": "SMS_FINANCIAL_TRANSACTIONS"
  },
  {
    "name": "START_FOREGROUND_SERVICES_FROM_BACKGROUND",
    "desc": "an application to start foreground services from the background at any time.",
    "value": "START_FOREGROUND_SERVICES_FROM_BACKGROUND"
  },
  {
    "name": "START_VIEW_APP_FEATURES",
    "desc": "the holder to start the screen with a list of app features.",
    "value": "START_VIEW_APP_FEATURES"
  },
  {
    "name": "START_VIEW_PERMISSION_USAGE",
    "desc": "the holder to start the permission usage screen for an app.",
    "value": "START_VIEW_PERMISSION_USAGE"
  },
  {
    "name": "STATUS_BAR",
    "desc": "an application to open, close, or disable the status bar and its icons.",
    "value": "STATUS_BAR"
  },
  {
    "name": "SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE",
    "desc": "an application to subscribe to keyguard locked (i.e., showing) state.",
    "value": "SUBSCRIBE_TO_KEYGUARD_LOCKED_STATE"
  },
  {
    "name": "SYSTEM_ALERT_WINDOW",
    "desc": "an app to create windows using the type WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY, shown on top of all other apps.",
    "value": "SYSTEM_ALERT_WINDOW"
  },
  {
    "name": "TRANSMIT_IR",
    "desc": "using the device's IR transmitter, if available.",
    "value": "TRANSMIT_IR"
  },
  {
    "name": "TURN_SCREEN_ON",
    "desc": "an app to turn on the screen on, e.g. with PowerManager.ACQUIRE_CAUSES_WAKEUP.",
    "value": "TURN_SCREEN_ON"
  },
  {
    "name": "UNINSTALL_SHORTCUT",
    "desc": "Don't use this permission in your app.",
    "value": "UNINSTALL_SHORTCUT"
  },
  {
    "name": "UPDATE_DEVICE_STATS",
    "desc": "an application to update device statistics.",
    "value": "UPDATE_DEVICE_STATS"
  },
  {
    "name": "UPDATE_PACKAGES_WITHOUT_USER_ACTION",
    "desc": "an application to indicate via PackageInstaller.SessionParams.setRequireUserAction(int) that user action should not be required for an app update.",
    "value": "UPDATE_PACKAGES_WITHOUT_USER_ACTION"
  },
  {
    "name": "USE_BIOMETRIC",
    "desc": "an app to use device supported biometric modalities.",
    "value": "USE_BIOMETRIC"
  },
  {
    "name": "USE_EXACT_ALARM",
    "desc": "apps to use exact alarms just like with SCHEDULE_EXACT_ALARM but without needing to request this permission from the user.",
    "value": "USE_EXACT_ALARM"
  },
  {
    "name": "USE_FINGERPRINT",
    "desc": "This constant was deprecated in API level 28. Applications should request USE_BIOMETRIC instead",
    "value": "USE_FINGERPRINT"
  },
  {
    "name": "USE_FULL_SCREEN_INTENT",
    "desc": "Required for apps targeting Build.VERSION_CODES.Q that want to use notification full screen intents.",
    "value": "USE_FULL_SCREEN_INTENT"
  },
  {
    "name": "USE_ICC_AUTH_WITH_DEVICE_IDENTIFIER",
    "desc": "to read device identifiers and use ICC based authentication like EAP-AKA.",
    "value": "USE_ICC_AUTH_WITH_DEVICE_IDENTIFIER"
  },
  {
    "name": "USE_SIP",
    "desc": "an application to use SIP service.",
    "value": "USE_SIP"
  },
  {
    "name": "UWB_RANGING",
    "desc": "Required to be able to range to devices using ultra-wideband.",
    "value": "UWB_RANGING"
  },
  {
    "name": "VIBRATE",
    "desc": "access to the vibrator.",
    "value": "VIBRATE"
  },
  {
    "name": "WAKE_LOCK",
    "desc": "using PowerManager WakeLocks to keep processor from sleeping or screen from dimming.",
    "value": "WAKE_LOCK"
  },
  {
    "name": "WRITE_APN_SETTINGS",
    "desc": "applications to write the apn settings and read sensitive fields of an existing apn settings like user and password.",
    "value": "WRITE_APN_SETTINGS"
  },
  {
    "name": "WRITE_CALENDAR",
    "desc": "an application to write the user's calendar data.",
    "value": "WRITE_CALENDAR"
  },
  {
    "name": "WRITE_CALL_LOG",
    "desc": "an application to write and read the user's call log data.",
    "value": "WRITE_CALL_LOG"
  },
  {
    "name": "WRITE_CONTACTS",
    "desc": "an application to write the user's contacts data.",
    "value": "WRITE_CONTACTS"
  },
  {
    "name": "WRITE_EXTERNAL_STORAGE",
    "desc": "an application to write to external storage.",
    "value": "WRITE_EXTERNAL_STORAGE"
  },
  {
    "name": "WRITE_GSERVICES",
    "desc": "an application to modify the Google service map.",
    "value": "WRITE_GSERVICES"
  },
  {
    "name": "WRITE_SECURE_SETTINGS",
    "desc": "an application to read or write the secure system settings.",
    "value": "WRITE_SECURE_SETTINGS"
  },
  {
    "name": "WRITE_SETTINGS",
    "desc": "an application to read or write the system settings.",
    "value": "WRITE_SETTINGS"
  },
  {
    "name": "WRITE_SYNC_SETTINGS",
    "desc": "applications to write the sync settings.",
    "value": "WRITE_SYNC_SETTINGS"
  },
  {
    "name": "WRITE_VOICEMAIL",
    "desc": "an application to modify and remove existing voicemails in the system.",
    "value": "WRITE_VOICEMAIL"
  }
]